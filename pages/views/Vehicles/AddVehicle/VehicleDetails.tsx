/* eslint-disable require-jsdoc */
/* eslint-disable react/no-unescaped-entities */
import React from "react";
import { useEffect, useState } from "react";
import KYC from "@/components/driverKYC";
import { Formik, Field, Form, ErrorMessage } from "formik";
import * as Yup from "yup";
import Head from "next/head";
import Layout from "../../../../components/layout";
import blueline from "../../../../assets/blueline.svg";
import greyline from "../../../../assets/greyline.svg";
import StyledDropzone from "../../../../components/dropzone";
import { Tab, Tabs, TabList, TabPanel } from "react-tabs";
import AllDriverTiles from "@/components/Drivers/DriverTiles";
import Link from "next/link";
import Image from "next/image";
import info from "../../../../assets/info_icon.png";
import InfoOutlinedIcon from "@mui/icons-material/InfoOutlined";
import driver from "../../../assets/driver_icon.png";
import plus from "../../../../assets/plus.png";
import vehicle from "../../../assets/vehicle_icon.png";
import payment from "../../../assets/payments.png";
import { DashboardTiles1 } from "@/components/tiles";
import DashboardTiles from "@/components/tiles";
import AccountMenu from "@/components/headerDropdown";
import BasicStacking from "@/components/stackedChart";
import Header from "@/components/header";

type DetailsProps = {
  vehicleManufacturer: string;
  vehicleModel: string;
  yearOfMake: string;
  registrationNumber: number | string;
  vehicleColor: string;
  mileage: string;
  transmissionType: string;
  chasisNumber: string;
  vehicleStatus: string;
};

type UploadModel = {
  documents?: any;
};

export default function VehicleDetails(prop: DetailsProps) {
  const phoneRegExp =
    /^((\+[1-9]{1,4}[ -]?)|(\([0-9]{2,3}\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;

  return (
    <>
      <div className="flex w-full">
        <div className="w-full z-10">
          <Header name="Add Vehicle" />
        </div>
      </div>
      <Layout>
        <Head>
          <title>Add New Driver</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
        </Head>

        {/* Code goes into the main tag */}
        <main className="bg-[#F2F2F2] w-full xg:min-h-screen">
          {/* Bottom menu */}
          <section className="bg-[#FFFFFF] rounded-lg m-[19px] p-4  ">
            <div className="pb-4">
              <h3 className="font-medium text-xl  leading-[30px] text-[#262626]">
                Add Vehicle
              </h3>
              <p className="text-[#737373] font-medium leading-[30px] text-sm ">
                Complete this form to add a vehicle.
              </p>
            </div>
            {/* Timeline */}
            <div className="flex py-6 px-[44px] border-y items-center">
              <div className="bg-[#007AF5] flex items-center justify-center  w-8 h-8 text-white rounded-[100%] ">
                1
              </div>
              <p className="pl-[10px] font-bold text-sm leading-[30px] text-[#007AF5]">
                Vehicle Details
              </p>
              <Image
                src={blueline}
                alt="blue timeline"
                className="w-[25%] grow ml-1"
              />
              <div className="bg-[#8C8C8C] flex items-center justify-center ml-1 w-8 h-8 text-white rounded-[100%] ">
                2
              </div>
              <p className="pl-[10px] font-bold text-sm leading-[30px] text-[#8C8C8C]">
                Vehicle Images
              </p>
              <Image
                src={greyline}
                alt="blue timeline"
                className="w-[25%] grow ml-1"
              />
              <div className="bg-[#8C8C8C] flex items-center justify-center ml-1 w-8 h-8 text-white rounded-[100%] ">
                3
              </div>
              <p className="pl-[10px] font-bold text-sm leading-[30px] text-[#8C8C8C]">
                Registration Details
              </p>
            </div>

            <div className="mt-2 mb- border-0">
              <Formik<DetailsProps>
                initialValues={{
                  vehicleManufacturer: "",
                  vehicleModel: "",
                  yearOfMake: "",
                  registrationNumber: "",
                  vehicleColor: "",
                  mileage: "",
                  transmissionType: "",
                  chasisNumber: "",
                  vehicleStatus: "",
                }}
                validationSchema={Yup.object({
                  vehicleManufacturer: Yup.string().required("Required"),
                  vehicleModel: Yup.string().required("Required"),
                  yearOfMake: Yup.string().required("Required"),
                  registrationNumber: Yup.string().required("Required"),
                  vehicleColor: Yup.string().required("Required"),
                  mileage: Yup.string().required("Required"),
                  transmissionType: Yup.string().required("Required"),
                  chasisNumber: Yup.string().required("Required"),
                  vehicleStatus: Yup.string().required("Required"),
                })}
                onSubmit={async (values) => {
                  alert(JSON.stringify(values, null, 2));
                }}
              >
                {({ handleSubmit, values, handleChange, setFieldValue }) => (
                  <Form onSubmit={handleSubmit} className="bg-white border-0 ">
                    <section className=" pb-4">
                      <div className="flex w-full gap-x-4 mt-[1.875rem]">
                        {/* Vehicle Manufacturer */}
                        <div className="w-[50%]">
                          <label
                            htmlFor="vehicleManufacturer"
                            className="block mb-2 text-sm font-medium leading-[30px] text-[#262626]"
                          >
                            Vehicle Manufacturer
                          </label>
                          <Field
                            type="text"
                            id="vehicleManufacturer"
                            className="border placeholder-[#BFBFBF] shadow-[0px_1px_2px_0px_#1B283614] border-gray-300 text-gray-900 text-sm rounded block w-full p-1.5"
                            placeholder="e.g Toyota"
                            value={values.vehicleManufacturer}
                            onChange={handleChange}
                          />
                          <p className="font-medium text-xs text-red-700">
                            <ErrorMessage name="vehicleManufacturer" />
                          </p>
                        </div>

                        {/* Vehicle Model */}
                        <div className="w-[50%] ">
                          <label
                            htmlFor="vehicleModel"
                            className="block mb-2 text-sm font-medium leading-[30px] text-[#262626]"
                          >
                            Vehicle Model
                          </label>
                          <Field
                            type="text"
                            id="vehicleModel"
                            className="border border-gray-300 shadow-[0px_1px_2px_0px_#1B283614] placeholder-[#BFBFBF] text-gray-900 text-sm rounded block w-full p-1.5"
                            placeholder="e.g Yaris"
                            value={values.vehicleModel}
                            onChange={handleChange}
                          />
                          <p className="font-medium text-xs text-red-700">
                            <ErrorMessage name="vehicleModel" />
                          </p>
                        </div>
                      </div>

                      <div className="flex gap-x-4 mt-4">
                        {/* year of make */}
                        <div className="w-[50%]">
                          <label
                            htmlFor="yearOfMake"
                            className="block mb-2 text-sm font-medium leading-[30px] text-[#262626]"
                          >
                            Year of Make
                          </label>
                          <Field
                            type="text"
                            id="yearOfMake"
                            className="border border-gray-300 shadow-[0px_1px_2px_0px_#1B283614] placeholder-[#BFBFBF] text-gray-900 text-sm rounded block w-full p-1.5"
                            placeholder="e.g 2010"
                            value={values.yearOfMake}
                            onChange={handleChange}
                          />
                          <p className="font-medium text-xs text-red-700">
                            <ErrorMessage name="yearOfMake" />
                          </p>
                        </div>

                        <div className="w-[50%]">
                          <label
                            htmlFor="registrationNumber"
                            className="block mb-2 text-sm font-medium leading-[30px] text-[#262626]"
                          >
                            Vehicle Registration Number
                          </label>
                          <Field
                            type="text"
                            id="registrationNumber"
                            className="border border-gray-300 shadow-[0px_1px_2px_0px_#1B283614] placeholder-[#BFBFBF] text-gray-900 text-sm rounded block w-full p-1.5"
                            placeholder="e.g GT - 123 23"
                            value={values.registrationNumber}
                            onChange={handleChange}
                          />
                          <p className="font-medium text-xs text-red-700">
                            <ErrorMessage name="registrationNumber" />
                          </p>
                          <p className="text-[#737373] text-xs font-normal leading-[16px] pt-1">
                            Always include a Hyphen ( - )
                          </p>
                        </div>
                      </div>
                    </section>

                    <section className="mt-">
                      {/* Vehicle Color*/}
                      <div className="flex gap-x-4">
                        <div className="w-[50%]">
                          <label
                            htmlFor="vehicleColor"
                            className="block mb-2 text-sm font-medium leading-[30px] text-[#262626]"
                          >
                            Vehicle Color
                          </label>
                          <Field
                            type="text"
                            id="vehicleColor"
                            className="border border-gray-300 shadow-[0px_1px_2px_0px_#1B283614] placeholder-[#BFBFBF] text-gray-900 text-sm rounded block w-full p-1.5"
                            placeholder="e.g Red"
                            value={values.vehicleColor}
                            onChange={handleChange}
                          />
                          <p className="font-medium text-xs text-red-700">
                            <ErrorMessage name="vehicleColor" />
                          </p>
                        </div>

                        {/* mileage */}
                        <div className="w-[50%]">
                          <label
                            htmlFor="mileage"
                            className="block mb-2 text-sm font-medium leading-[30px] text-[#262626]"
                          >
                            Mileage
                          </label>
                          <Field
                            type="text"
                            id="mileage"
                            className="border border-gray-300 shadow-[0px_1px_2px_0px_#1B283614] placeholder-[#BFBFBF] text-gray-900 text-sm rounded block w-full p-1.5"
                            placeholder="e.g 150,000 km"
                            value={values.mileage}
                            onChange={handleChange}
                          />
                          <p className="font-medium text-xs text-red-700">
                            <ErrorMessage name="mileage" />
                          </p>
                          <p className="text-[#737373] text-xs font-normal leading-[16px] pt-1">
                            Always include kilometers (km)
                          </p>
                        </div>
                      </div>
                    </section>

                    <section className="mt-4">
                      {/* Transmission Type*/}
                      <div className="flex gap-x-4 mt-2">
                        <div className="w-[50%]">
                          <label
                            htmlFor="transmissionType"
                            className="block mb-2 text-sm font-medium leading-[30px] text-[#262626]"
                          >
                            Transmission Type
                          </label>
                          <Field
                            id="transmissionType"
                            as="select"
                            className="bg-[#FFFFFF] border shadow-[0px_1px_2px_0px_#1B283614] border-[#D9D9D9] placeholder-[#BFBFBF] text-gray-900 text-sm rounded-[4px] block w-full py-1.5 "
                            value={values.transmissionType}
                            onChange={handleChange}
                          >
                            <option className="py-3" disabled={true} value={""}>
                              Select Transmission Type
                            </option>
                            <option className="py-3">Manual</option>
                            <option className="py-3">Automatic</option>
                          </Field>
                          <p className="font-medium text-xs text-red-700">
                            <ErrorMessage name="transmissionType" />
                          </p>
                        </div>

                        {/* Chasis Number */}
                        <div className="w-[50%]">
                          <label
                            htmlFor="chasisNumber"
                            className="block mb-2 text-sm font-medium leading-[30px] text-[#262626]"
                          >
                            Chasis Number
                          </label>
                          <Field
                            type="text"
                            id="chasisNumber"
                            className="border border-gray-300 shadow-[0px_1px_2px_0px_#1B283614] placeholder-[#BFBFBF] text-gray-900 text-sm rounded block w-full p-1.5"
                            placeholder="e.g ATCXG23435534"
                            value={values.chasisNumber}
                            onChange={handleChange}
                          />
                          <p className="font-medium text-xs text-red-700">
                            <ErrorMessage name="chasisNumber" />
                          </p>
                        </div>
                      </div>
                    </section>

                    {/* vehicle status */}
                    <div className="w-full mt-4">
                      <label
                        htmlFor="vehicleStatus"
                        className="block mb-2 text-sm font-medium leading-[30px] text-[#262626]"
                      >
                        Vehicle Status
                      </label>
                      <Field
                        id="vehicleStatus"
                        as="select"
                        className="bg-[#FFFFFF] border shadow-[0px_1px_2px_0px_#1B283614] grow border-[#D9D9D9] placeholder-[#BFBFBF] text-gray-900 text-sm rounded-[4px] block w-full py-1.5 "
                        value={values.vehicleStatus}
                        onChange={handleChange}
                      >
                        <option className="py-3" disabled={true} value={""}>
                          Select Vehicle Status
                        </option>
                        <option className="py-3">Manual</option>
                        <option className="py-3">Automatic</option>
                      </Field>
                      <p className="font-medium text-xs text-red-700">
                        <ErrorMessage name="vehicleStatus" />
                      </p>
                    </div>

                    <div className="flex justify-between mt-5">
                      <button
                        type="button"
                        className="text-[#FFFFFF] border bg-[#8C8C8C] rounded-[4px] px-4 border-[#DADADA] focus:outline-none text-sm py-1.5 text-center inline-flex justify-center font-normal items-center"
                        disabled
                      >
                        Back
                      </button>

                      <Link href={"/views/Vehicles/AddVehicle/VehicleImages"}>
                        <button
                          type="button"
                          className="text-[#FFFFFF] border bg-[#007AF5] rounded-[4px] px-4 border-[#DADADA] focus:outline-none text-sm py-1.5 text-center inline-flex justify-center font-normal items-center"
                        >
                          Save & Next
                        </button>
                      </Link>
                    </div>
                  </Form>
                )}
              </Formik>
            </div>
          </section>
        </main>
      </Layout>
    </>
  );
}
