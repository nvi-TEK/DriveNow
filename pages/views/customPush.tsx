/* eslint-disable react/no-unescaped-entities */
/* eslint-disable require-jsdoc */
import React from "react";
import { useEffect, useState } from "react";
import KYC from "@/components/driverKYC";
import Head from "next/head";
import Datatable from "../../components/customPush/table"
import Layout from "../../components/layout";
import Link from "next/link";
import logo from "../../assets/logo.png";
import sendlogo from "../../assets/send.png";
import Image from "next/image";
import { Formik, Form, Field, ErrorMessage } from "formik";
import * as Yup from "yup";
import SingleInputDateRangePicker from "@/components/datePicker";
import driver from "../../assets/driver_icon.png";
import vehicle from "../../assets/vehicle_icon.png";
import payment from "../../assets/payments.png";
import { DashboardTiles1 } from "@/components/tiles";
import DashboardTiles from "@/components/tiles";
import revenue from "../../assets/revenue_icon.png";
import { Grid } from "@mui/material";
// import { gridSpacing } from "../../components/revenueChart/constant";
import BasicStacking from "@/components/stackedChart";
import Table1 from "@/components/customPush/table1";

type PushProp = {
  title: string;
  message: string;
  group: string;
  notification: string;
  device: string;
};

export default function customPush() {
  return (
    <>
      <Layout>
        <Head>
          <title>Custom Push/SMS</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
        </Head>

        {/* Code goes into the main tag */}
        <main className="bg-[#F2F2F2] w-full xg:min-h-screen">
          {/* Bottom menu */}
          <section className="w- ">
            <div className="flex">
              <p className="pt-[23px] pl-[21px] text-[22px] leading-[30px] font-medium text-[#262626] ">
                Custom Push/SMS
              </p>
            </div>

            <div className="mt-10 h-[368px] mb-12 shadow mx-6">
              <Formik<PushProp>
                initialValues={{
                  title: "",
                  message: "",
                  group: "",
                  notification: "",
                  device: "",
                }}
                validationSchema={Yup.object({
                  message: Yup.string()
                    .max(20, "Must be 40 characters or less")
                    .required("Message required"),

                  title: Yup.string().required("Message required"),
                  group: Yup.string().required("Required field"),
                  notification: Yup.string().required("Required field"),
                  device: Yup.string().required("Required field"),
                })}
                onSubmit={async (values) => {
                  alert(JSON.stringify(values, null, 2));
                }}
              >
                {({ handleSubmit, values, handleChange, setFieldValue }) => (
                  <Form
                    onSubmit={handleSubmit}
                    className="bg-white h-[368px] shadow-lg px-[1rem] pb-10"
                  >
                    <div className="flex space-x-5">
                      <section className="grow ">
                        <label
                          htmlFor="group"
                          className="block mb-2 text-sm pt-[10px] font-medium text-gray-900"
                        >
                          Select Group to Send
                        </label>
                        <Field
                          id="group"
                          as="select"
                          className="bg-[#FFFFFF] border grow border-[#D9D9D9] text-gray-900 text-sm rounded-[4px] block w-[320px] py-1.5 "
                          value={values.group}
                          onChange={handleChange}
                        >
                          <option disabled={true} value={""}>
                            Select group
                          </option>
                          <option>All Drivers</option>
                          <option>Online Drivers</option>
                          <option>Offline Drivers</option>
                          <option>DriveNow Drivers</option>
                        </Field>
                        <p className="font-medium text-red-700">
                          <ErrorMessage name="group" />
                        </p>
                      </section>
                      <section className=" grow">
                        <label
                          htmlFor="notification"
                          className="block mb-2 text-sm pt-[10px] font-medium text-gray-900"
                        >
                          Select Notification Type
                        </label>
                        <Field
                          id="notification"
                          as="select"
                          className="bg-[#FFFFFF] border border-[#D9D9D9] text-gray-900 text-sm rounded-[4px] block w-[320px] p-1.5 "
                          value={values.notification}
                          onChange={handleChange}
                        >
                          <option disabled={true} value={""}>
                            Select notification type
                          </option>
                          <option>SMS Notification</option>
                          <option>PUSH Notification</option>
                          <option>SMS/PUSH Notification</option>
                        </Field>
                        <p className="font-medium text-red-700">
                          <ErrorMessage name="notification" />
                        </p>
                      </section>
                      <section className=" grow">
                        <label
                          htmlFor="device"
                          className="block mb-2 text-sm pt-[10px] font-medium text-gray-900"
                        >
                          Select Device Type
                        </label>
                        <Field
                          id="device"
                          as="select"
                          className="bg-[#FFFFFF] border border-[#D9D9D9] text-gray-900 text-sm rounded-[4px] block w-[320px] p-1.5 "
                          value={values.device}
                          onChange={handleChange}
                        >
                          <option disabled={true} value={""}>
                            Select Device
                          </option>
                          <option>Android</option>
                          <option>IOS</option>
                          <option>Both</option>
                        </Field>
                        <p className="font-medium text-red-700">
                          <ErrorMessage name="device" />
                        </p>
                      </section>
                    </div>

{/* <SingleInputDateRangePicker /> */}

                    <div className="mt-[24px]">
                      <label
                        htmlFor="title"
                        className="block mb-2 text-sm font-normal  text-[#000000]"
                      >
                        Message Title
                      </label>
                      <Field
                        type="text"
                        id="title"
                        className="border border-gray-300 text-gray-900 text-sm rounded  block w-[40%] p-1.5"
                        placeholder="Title"
                        value={values.title}
                        onChange={handleChange}
                      />
                      <p className="font-medium text-red-700">
                        <ErrorMessage name="title" />
                      </p>
                    </div>

                    <div className="mt-2">
                      <label
                        htmlFor="message"
                        className="block mb-2 mt-3 text-sm leading-[18px] font-normal text-[#000000] "
                      >
                        Compose Notification Message
                      </label>
                      <Field
                        id="message"
                        as="textarea"
                        rows={10}
                        className="block p-2.5 mb-auto w-[100%] h-[100px] text-sm text-gray-900 bg-[#FFFFFF] rounded-[4px] border border-gray-300"
                        placeholder="Type your message here..."
                        value={values.message}
                        onChange={handleChange}
                      />
                      <p className="font-medium text-xs  text-red-700">
                        <ErrorMessage name="message" />
                      </p>
                    </div>

                    <Link href={""}>
                      <button
                        type="button"
                        className="text-[#FFFFFF] border bg-[#007AF5]  mt-[2%] rounded-[4px] w-[84px] border-[#DADADA] focus:outline-none text-xs py-1.5 text-center inline-flex justify-center font-normal items-center ml-[] mr-2 mb-2"
                      >
                        Send
                        <Image className="ml-[4px]" src={sendlogo} alt={""} />
                      </button>
                    </Link>
                  </Form>
                )}
              </Formik>
            </div>

            <div className="mb-0 mx-20 h-[730px] bg-white ">
              <Table1 />
            </div>
          </section>
          
        </main>
      </Layout>
    </>
  );
}
